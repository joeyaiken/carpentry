Next thing to deal with...
The data reducer needs to be updated to accept the RECEIVE_CARD_SEARCH action, which has the payload from the card search
The data redurcer should store info on what indexes have changed, and report that info in a way tat the AppData container can consume it
This helps the goal of building out deck indexes










//caches might be unreliable
General current task list:
    Tasks Priority:
        search refactoring: Add some filtering to deck search
        search refactoring: Add "auto-cache to index"
        search refactoring: Add ability to search index instead of/in addition to web

        Need to clear search results as soon as a new search initializes
        Need to show a visual indicator when results are searching
            non-determinate loading bar below the filters?
        //after this, options include 
        //  start refactoring DB storage
        //      Prob shouldn't remove ILandCount until the deck editor groups same cards
        //      For now, it's part of an ICardList
        //  Log current decks with in-place DB structure
        //  Start refactoring search
        //      options for local vs web
        //      additional search filters
        //      actually search on "enter" (make form?)

    Goals
        Have all current decks logged
        Have all rares logged
        Have general index files populated

        Once I have all data logged, I can work on stats, stores, and deck building tools
        I should probably create the basic stores now, but not fully populate them
    
    
    Add overview page
        lists decks & deck stats
        Can be used to navigate to decks
    Refactor AppNav to be a constant left bar?
    Add card index JSON files for specific sets
    Update decks to store Name / Set combos for cards, not just Name
    Update decks to store lands in the card list, not a unique object
